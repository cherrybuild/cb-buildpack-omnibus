#!/bin/bash

# fail fast
set -o errexit
set -o nounset
set -o pipefail

indent() {
  sed -u 's/^/       /'
}

scriptname=$(basename $0)
case $# in
  2) :;;
  *) echo "$scriptname: usage: $scriptname BUILD_DIR CACHE_DIR" >&2; exit 2;;
esac

build_dir="$1"
cache_dir="$2"
ccache_max_size=50G
if [ -f /usr/bin/gem1.9 ]
then
  gem=/usr/bin/gem1.9
else
  gem=/usr/bin/gem
fi

export CCACHE_DIR=$cache_dir/ccache
export CC='ccache gcc'
export CXX='ccache g++'
export CC_host="$CC"
export CXX_host="$CXX"

ccache -M $ccache_max_size
ccache -z

echo "-----> Installing bundler"
$gem install bundler --no-rdoc --no-ri --user-install 2>&1 | indent
if [ -f $HOME/.gem/ruby/1.9.1/bin/bundle ]
then
  bundle=$HOME/.gem/ruby/1.9.1/bin/bundle
else
  bundle=$HOME/bin/bundle
fi

echo "-----> Installing gems"
cd $build_dir >/dev/null 2>&1
$bundle install --path=vendor/bundle --binstubs 2>&1 | indent
cd - >/dev/null 2>&1

echo "-----> Creating omnibus.rb config file"
cat <<EOT >$build_dir/omnibus.rb
use_s3_caching false
cache_dir "$cache_dir/omnibus"
source_dir "$build_dir/out/source"
build_dir "$build_dir/out/build"
package_dir "$build_dir/out/pkg"
EOT

for project in $build_dir/config/projects/*.rb
do
  project=$(basename $project .rb)
  case $project in
    *-windows) continue;;
  esac
  echo "-----> Building omnibus project: $project"
  cd $build_dir >/dev/null 2>&1
  bin/omnibus build project $project 2>&1 | indent
  cd $build_dir >/dev/null 2>&1
done

cd - >/dev/null 2>&1
